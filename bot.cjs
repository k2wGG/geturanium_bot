// bot.cjs
const fs = require('fs').promises;
const path = require('path');
const puppeteer = require('puppeteer-extra'); // <--- –ò—Å–ø–æ–ª—å–∑—É–µ–º puppeteer-extra
const StealthPlugin = require('puppeteer-extra-plugin-stealth'); // <--- –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º StealthPlugin

puppeteer.use(StealthPlugin()); // <--- –ü—Ä–∏–º–µ–Ω—è–µ–º StealthPlugin

/* ===== 1. –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è –ø–æ-—É–º–æ–ª—á–∞–Ω–∏—é =================== */
const DEF = {
  enabled:true,
  autoAC:true, autoSM:true, autoCB:true, autoFarm:true, autoRefine:true,
  keepAlive:true,
  autoReload:true, reloadMinutes:50,
  logEach:60, // –õ–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ –≤ –∫–æ–Ω—Å–æ–ª—å Node.js –∫–∞–∂–¥—ã–µ N —Å–µ–∫—É–Ω–¥ (–¥–ª—è –∫–ª–∏–µ–Ω—Ç—Å–∫–æ–≥–æ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è).
  headless:false, // –ó–Ω–∞—á–µ–Ω–∏–µ –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é –¥–ª—è config.json
  slowMo:0,
  cookiesFilePath:'./cookies.json',
  configFilePath :'./config.json',
  statsFilePath  :'./stats.json',
  backoffUntil:0 // –ü–µ—Ä–µ–¥–∞–µ–º —ç—Ç–æ –∑–Ω–∞—á–µ–Ω–∏–µ –≤ –∫–ª–∏–µ–Ω—Ç—Å–∫–∏–π —Å–∫—Ä–∏–ø—Ç
};

/* ===== 2. –°–æ—Å—Ç–æ—è–Ω–∏–µ ================================= */
let config = { ...DEF };
let stats  = { reloadCount:0,
               clickCount:{autoAC:0,autoSM:0,autoCB:0,autoFarm:0,autoRefine:0}};
let cookies=[], navigating=false;
let lastCookieSave = Date.now();
let browser, page; // –£–±—Ä–∞–ª–∏ gameFrame, —Ç–∞–∫ –∫–∞–∫ —Ä–∞–±–æ—Ç–∞–µ–º –≤ page

// –î–ª—è –ø–µ—Ä–µ–¥–∞—á–∏ –¥–∞–Ω–Ω—ã—Ö –∏–∑ –∫–ª–∏–µ–Ω—Ç–∞ –≤ Node.js
let clientBackoffUntil = 0; // –¢–µ–ø–µ—Ä—å —ç—Ç–æ –ø—Ä–æ—Å—Ç–æ Node.js –ø–µ—Ä–µ–º–µ–Ω–Ω–∞—è

/* ===== 3. –õ–æ–≥–≥–µ—Ä =================================== */
const COLOR = { info: 34, warn: 33, error: 31, debug: 36, success: 32 }; // –î–æ–±–∞–≤–∏–ª success
// –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ 0 –¥–ª—è –≤—ã–≤–æ–¥–∞ –≤—Å–µ—Ö –ª–æ–≥–æ–≤ (–≤–∫–ª—é—á–∞—è debug), 1 –¥–ª—è info+, 2 –¥–ª—è warn+, 3 –¥–ª—è error+
const MIN_LOG_LEVEL_INDEX = 0; // –í—Ä–µ–º–µ–Ω–Ω–æ 0 –¥–ª—è –ø–æ–ª–Ω–æ–π –æ—Ç–ª–∞–¥–∫–∏. –ü–æ—Å–ª–µ –æ—Ç–ª–∞–¥–∫–∏ –º–æ–∂–Ω–æ –∏–∑–º–µ–Ω–∏—Ç—å –Ω–∞ 1 –∏–ª–∏ 2.
const LOG_LEVELS = ['debug', 'info', 'warn', 'error'];

function log(msg, level = 'info') {
  const levelIndex = LOG_LEVELS.indexOf(level);
  if (levelIndex < MIN_LOG_LEVEL_INDEX) {
    return; // –ü—Ä–æ–ø—É—Å–∫–∞–µ–º –ª–æ–≥–∏, –µ—Å–ª–∏ –∏—Ö —É—Ä–æ–≤–µ–Ω—å –Ω–∏–∂–µ –º–∏–Ω–∏–º–∞–ª—å–Ω–æ —Ä–∞–∑—Ä–µ—à–µ–Ω–Ω–æ–≥–æ
  }

  const time = new Date().toLocaleTimeString('ru-RU');
  const prefix = { info:'‚ÑπÔ∏è', warn:'‚ö†Ô∏è', error:'üö®', debug:'üêû', success:'‚úÖ' }[level] || ' ';
  console.log(`\x1b[${COLOR[level]||37}m[${time}] ${prefix} ${msg}\x1b[0m`);
}

/* ===== 4. –£—Ç–∏–ª–∏—Ç—ã ================================== */
const rnd = (min, max) => min + Math.random() * (max - min) | 0; // –ò—Å–ø—Ä–∞–≤–∏–ª –Ω–∞–∑–≤–∞–Ω–∏–µ –∞—Ä–≥—É–º–µ–Ω—Ç–æ–≤ –Ω–∞ min/max
const sleep = ms => new Promise(r => setTimeout(r, ms));

/* ===== 5. –§–∞–π–ª–æ–≤—ã–µ –æ–ø–µ—Ä–∞—Ü–∏–∏ ======================= */
async function ensureDir(file) {
  await fs.mkdir(path.dirname(path.resolve(file)), { recursive:true });
}
async function load(file, def) {
  try { return JSON.parse(await fs.readFile(path.resolve(file), 'utf8')); }
  catch (e) {
    if (e.code === 'ENOENT') {
      log(`‚ÑπÔ∏è –§–∞–π–ª ${file} –Ω–µ –Ω–∞–π–¥–µ–Ω, –∏—Å–ø–æ–ª—å–∑—É—é –∑–Ω–∞—á–µ–Ω–∏–µ –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é.`, 'info');
      return def;
    }
    log(`‚ùå Error loading ${file}: ${e.message}`, 'error');
    return def;
  }
}
async function save(file, data) {
  await ensureDir(file);
  await fs.writeFile(path.resolve(file), JSON.stringify(data, null, 2), 'utf8');
  // log(`üíæ ${file} —Å–æ—Ö—Ä–∞–Ω–µ–Ω.`, 'debug'); // –ò–∑–±—ã—Ç–æ—á–Ω—ã–π –ª–æ–≥, –º–æ–∂–Ω–æ –æ—Ç–∫–ª—é—á–∏—Ç—å
}

/* ===== 6. –ó–∞–ø—É—Å–∫ Puppeteer ======================== */
const PROFILE_DIR = path.resolve(__dirname, 'browser_profile');
async function launch() {
  if (browser) {
    log('‚ÑπÔ∏è –ó–∞–∫—Ä—ã–≤–∞—é —Å—Ç–∞—Ä—ã–π –±—Ä–∞—É–∑–µ—Ä...', 'info');
    try {
      await browser.close();
    } catch (e) {
      log(`‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–∫—Ä—ã—Ç–∏–∏ –±—Ä–∞—É–∑–µ—Ä–∞: ${e.message}`, 'error');
    }
  }

  log('‚ÑπÔ∏è –ó–∞–ø—É—Å–∫ –±—Ä–∞—É–∑–µ—Ä–∞...', 'info');
  try {
    // --- –ò–ó–ú–ï–ù–ï–ù–ù–ê–Ø –õ–û–ì–ò–ö–ê –î–õ–Ø HEADLESS –†–ï–ñ–ò–ú–ê ---
    // –ï—Å–ª–∏ –ø–µ—Ä–µ–º–µ–Ω–Ω–∞—è –æ–∫—Ä—É–∂–µ–Ω–∏—è HEADLESS —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞ –≤ 'true', –∏—Å–ø–æ–ª—å–∑—É–µ–º 'new' (–Ω–æ–≤—ã–π headless —Ä–µ–∂–∏–º).
    // –ï—Å–ª–∏ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞ –≤ 'false', –∏—Å–ø–æ–ª—å–∑—É–µ–º false (GUI —Ä–µ–∂–∏–º).
    // –í –ø—Ä–æ—Ç–∏–≤–Ω–æ–º —Å–ª—É—á–∞–µ, –∏—Å–ø–æ–ª—å–∑—É–µ–º –∑–Ω–∞—á–µ–Ω–∏–µ –∏–∑ config.json.
    let finalHeadlessMode;
    if (process.env.HEADLESS === 'true') {
        finalHeadlessMode = 'new';
    } else if (process.env.HEADLESS === 'false') {
        finalHeadlessMode = false;
    } else {
        // –ï—Å–ª–∏ –ø–µ—Ä–µ–º–µ–Ω–Ω–∞—è –æ–∫—Ä—É–∂–µ–Ω–∏—è –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞, –∏—Å–ø–æ–ª—å–∑—É–µ–º –∑–Ω–∞—á–µ–Ω–∏–µ –∏–∑ –∫–æ–Ω—Ñ–∏–≥–∞
        finalHeadlessMode = config.headless === true ? 'new' : config.headless;
    }

    log(`üêû Debug: –í—ã—á–∏—Å–ª–µ–Ω–Ω–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ headless –¥–ª—è Puppeteer: "${finalHeadlessMode}"`, 'debug');
    // --- –ö–û–ù–ï–¶ –ò–ó–ú–ï–ù–ï–ù–ù–û–ô –õ–û–ì–ò–ö–ò ---

    browser = await puppeteer.launch({
      headless: finalHeadlessMode, // <-- –ò—Å–ø–æ–ª—å–∑—É–µ–º –≤—ã—á–∏—Å–ª–µ–Ω–Ω–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ
      slowMo: config.slowMo,
      userDataDir: PROFILE_DIR,
      args: [
        '--no-sandbox',
        '--disable-setuid-sandbox',
        '--window-size=1920,1080',
        '--disable-blink-features=AutomationControlled',
        '--disable-notifications', // –î–ª—è –ø–æ–¥–∞–≤–ª–µ–Ω–∏—è —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π
        '--disable-popup-blocking', // –î–ª—è –ø–æ–¥–∞–≤–ª–µ–Ω–∏—è –≤—Å–ø–ª—ã–≤–∞—é—â–∏—Ö –æ–∫–æ–Ω
        '--ignore-certificate-errors', // –ò–≥–Ω–æ—Ä–∏—Ä–æ–≤–∞—Ç—å –æ—à–∏–±–∫–∏ —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç–æ–≤
      ]
    });
    page = await browser.newPage();
    await page.setViewport({ width:1920, height:1080 });
    await page.setUserAgent(
      'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 ' +
      '(KHTML, like Gecko) Chrome/125.0.0.0 Safari/537.36'
    );

    // –ó–¥–µ—Å—å –Ω–µ –±—É–¥–µ—Ç —Å–ª—É—à–∞—Ç–µ–ª–µ–π –Ω–∞–≤–∏–≥–∞—Ü–∏–∏, —Ç–∞–∫ –∫–∞–∫ –º—ã —É–ø—Ä–∞–≤–ª—è–µ–º navigating –≤—Ä—É—á–Ω—É—é

    await page.evaluateOnNewDocument(() => {
      // –ü–∞—Ç—á–∏ –¥–ª—è isTrusted, requestAnimationFrame, setTimeout/setInterval, hasFocus
      if (!Event.prototype.__ab_trusted) {
        [Event, MouseEvent, KeyboardEvent, UIEvent].forEach(C=>{
          Object.defineProperty(C.prototype,'isTrusted',{
            get(){return true;}, configurable:true
          });
        });
        Event.prototype.__ab_trusted = true;
      }
      if (window.requestAnimationFrame && !window.requestAnimationFrame.__ab_patched) {
        const orig = window.requestAnimationFrame;
        let last = performance.now();
        const MIN = 1000/60;
        window.requestAnimationFrame = cb => {
          const now = performance.now();
          if (document.hidden && now - last >= MIN) {
            last = now;
            try { cb(now); } catch {}
          }
          return orig(cb);
        };
        window.requestAnimationFrame.__ab_patched = true;
      }
      if (!window.__ab_timers_patched) {
        const MIN = 4;
        const oTO = window.setTimeout, oTI = window.setInterval;
        window.setTimeout = (cb, d=0, ...a) => oTO(cb, Math.max(d,MIN), ...a);
        window.setInterval= (cb, d=0, ...a) => oTI(cb, Math.max(d,MIN), ...a);
        window.__ab_timers_patched = true;
      }
      if (document.hasFocus && !document.hasFocus.__ab_patched) {
        document.hasFocus = ()=> true;
        document.hasFocus.__ab_patched = true;
      }
    });

    // Expose functions to the main page context
    await page.exposeFunction('doPuppeteerClick', async (x,y) => {
      try {
        await page.mouse.move(x,y,{steps:rnd(10,20)});
        await page.mouse.down();
        await sleep(rnd(40,120));
        await page.mouse.up();
      } catch (e) {
          if (!e.message.includes('Session closed') && !e.message.includes('Target closed')) {
              log(`‚ùå –û—à–∏–±–∫–∞ doPuppeteerClick: ${e.message}`, 'error');
          }
      }
    });
    // --- –ò–°–ü–†–ê–í–õ–ï–ù–ò–ï –î–õ–Ø –î–í–û–ô–ù–´–• [Client] ---
    await page.exposeFunction('logFromClient', (msg, lvl='info') => {
      const cleanedMsg = msg.startsWith('[Client] ') ? msg.substring('[Client] '.length) : msg;
      log(`[Client] ${cleanedMsg}`, lvl);
    });
    // --- –ö–û–ù–ï–¶ –ò–°–ü–†–ê–í–õ–ï–ù–ò–Ø ---
  } catch (error) {
    log(`‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ –±—Ä–∞—É–∑–µ—Ä–∞: ${error.message}`, 'error');
    throw error; // –ë—Ä–æ—Å–∞–µ–º –æ—à–∏–±–∫—É, —á—Ç–æ–±—ã –æ–Ω–∞ –±—ã–ª–∞ –ø–æ–π–º–∞–Ω–∞ –≤ mainLoop
  }
}

/* ===== 7. –°–ª—É—à–∞—Ç–µ–ª–∏ =============================== */
function listeners() {
  page.on('console', msg => { // –î–æ–±–∞–≤–ª—è–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ console.log —Å–æ —Å—Ç—Ä–∞–Ω–∏—Ü—ã
    if (msg.text().includes('Unable to preventDefault inside passive event listener invocation.') ||
        msg.text().includes('Touch event suppression') ||
        msg.text().includes('The default unity loader module is not available on this platform') ||
        msg.text().includes('DevTools listening on')) {
      return;
    }
    log(`[PAGE CONSOLE] ${msg.text()}`, 'debug');
  });
  page.on('pageerror', err => {
    if (!/Minified React error #\d+|TypeError: Cannot set properties of null|ResizeObserver loop limit exceeded/.test(err.message))
      log(`‚ùå JS Error: ${err.message}`, 'error');
  });
  page.on('requestfailed', req => {
    if (req.failure()?.errorText !== 'net::ERR_ABORTED')
      log(`‚ö†Ô∏è Request Failed: ${req.url()} ‚Äì ${req.failure()?.errorText}`, 'warn');
  });
}

/* ===== 8. –ñ—ë—Å—Ç–∫–∞—è –ø–µ—Ä–µ–∑–∞–≥—Ä—É–∑–∫–∞ =================== */
let reloadTimer = null;
let consecutiveErrors = 0;
const MAX_CONSECUTIVE_ERRORS = 5;

async function hardReload() {
  log('üö® –ñ—ë—Å—Ç–∫–∞—è –ø–µ—Ä–µ–∑–∞–≥—Ä—É–∑–∫–∞...', 'warn');
  stats.reloadCount++;
  await save(config.statsFilePath, stats);
  clearTimeout(reloadTimer);
  navigating = true; // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º navigating –≤ true –ø–µ—Ä–µ–¥ –ø–µ—Ä–µ–∑–∞–≥—Ä—É–∑–∫–æ–π

  // –î–µ–ª–∞–µ–º —Å–∫—Ä–∏–Ω—à–æ—Ç –ø–µ—Ä–µ–¥ –ø–µ—Ä–µ–∑–∞–≥—Ä—É–∑–∫–æ–π –¥–ª—è –æ—Ç–ª–∞–¥–∫–∏
  try {
      await fs.mkdir('./screenshots', { recursive: true });
      await page.screenshot({ path: `./screenshots/reload_before_${Date.now()}.png` });
      log('üì∏ –°–∫—Ä–∏–Ω—à–æ—Ç —Å–¥–µ–ª–∞–Ω –ø–µ—Ä–µ–¥ –ø–µ—Ä–µ–∑–∞–≥—Ä—É–∑–∫–æ–π.', 'debug');
  } catch (e) {
      log(`‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ —Å–∫—Ä–∏–Ω—à–æ—Ç–∞ –ø–µ—Ä–µ–¥ –ø–µ—Ä–µ–∑–∞–≥—Ä—É–∑–∫–æ–π: ${e.message}`, 'error');
  }

  try {
    await page.goto('about:blank');
    await page.goto(`https://geturanium.io/?_=${Date.now()}`, { waitUntil:'networkidle2', timeout:60000 }); // –ñ–¥–µ–º –ø–æ–ª–Ω–æ–π –∑–∞–≥—Ä—É–∑–∫–∏ —Å–µ—Ç–∏
    log(`‚ÑπÔ∏è URL –ø–æ—Å–ª–µ –ø–µ—Ä–µ–∑–∞–≥—Ä—É–∑–∫–∏: ${page.url()}`, 'info');

    // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –Ω–µ –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü–µ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏ –ª–∏ –º—ã
    if (page.url().includes('/auth')) {
      log('üîë –ü–æ—Å–ª–µ –ø–µ—Ä–µ–∑–∞–≥—Ä—É–∑–∫–∏ –æ–∫–∞–∑–∞–ª–∏—Å—å –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü–µ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏, –∂–¥—ë–º –≤—Ö–æ–¥–∞‚Ä¶', 'info');
      await page.waitForNavigation({ waitUntil:'networkidle2', timeout:180000 })
          .catch(e => log(`‚åõ –¢–∞–π–º-–∞—É—Ç –æ–∂–∏–¥–∞–Ω–∏—è –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏ –ø–æ—Å–ª–µ –ø–µ—Ä–µ–∑–∞–≥—Ä—É–∑–∫–∏: ${e.message}`, 'warn'));
      log('‚úÖ –ê–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è –ø–æ—Å–ª–µ –ø–µ—Ä–µ–∑–∞–≥—Ä—É–∑–∫–∏ –∑–∞–≤–µ—Ä—à–µ–Ω–∞', 'info');
      // –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –∫—É–∫–∏ —É–∂–µ –ø—Ä–æ–∏—Å—Ö–æ–¥–∏—Ç –≤ –∫–æ–Ω—Ü–µ —Ü–∏–∫–ª–∞ –∏–ª–∏ –ø—Ä–∏ SIGINT
    } else {
      log('‚úÖ –ü–æ—Å–ª–µ –ø–µ—Ä–µ–∑–∞–≥—Ä—É–∑–∫–∏ —Å–µ—Å—Å–∏—è –∞–∫—Ç–∏–≤–Ω–∞.', 'info');
    }

  } catch (error) {
    log(`‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–∏ goto –≤–æ –≤—Ä–µ–º—è hardReload: ${error.message}`, 'error');
    // –ï—Å–ª–∏ –¥–∞–∂–µ goto –Ω–µ —Å—Ä–∞–±–æ—Ç–∞–ª–æ, —Ç–æ –Ω—É–∂–Ω–æ –ø–æ–ª–Ω–æ—Å—Ç—å—é –ø–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏—Ç—å –±—Ä–∞—É–∑–µ—Ä
    await launch(); // –ü–µ—Ä–µ–∑–∞–ø—É—Å–∫–∞–µ–º –±—Ä–∞—É–∑–µ—Ä
  }
  navigating = false; // –°–±—Ä–∞—Å—ã–≤–∞–µ–º navigating –ø–æ—Å–ª–µ goto
  await sleep(3000); // –î–∞–µ–º —Å—Ç—Ä–∞–Ω–∏—Ü–µ –Ω–µ–º–Ω–æ–≥–æ –≤—Ä–µ–º–µ–Ω–∏ —É—Å—Ç–∞–∫–∞–Ω–∏—Ç—å—Å—è
  scheduleReload();
}
function scheduleReload() {
  clearTimeout(reloadTimer);
  if (config.autoReload) {
    log(`‚è∞ –°–ª–µ–¥—É—é—â–∞—è –∞–≤—Ç–æ-–ø–µ—Ä–µ–∑–∞–≥—Ä—É–∑–∫–∞ —á–µ—Ä–µ–∑ ${config.reloadMinutes} –º–∏–Ω.`, 'info');
    reloadTimer = setTimeout(hardReload, config.reloadMinutes*60000);
  }
}

/* ===== 9. –û—Å–Ω–æ–≤–Ω–æ–π —Ü–∏–∫–ª ========================== */
async function mainLoop() {
  let lastXu = 0, lastTS = Date.now();
  let navigationStuckTimer = null;

  log('‚úÖ mainLoop: –ó–∞–ø—É—Å–∫ –æ—Å–Ω–æ–≤–Ω–æ–≥–æ —Ü–∏–∫–ª–∞.', 'success');

  while (true) {
    if (navigating) {
      log('mainLoop: –ù–∞–≤–∏–≥–∞—Ü–∏—è –∞–∫—Ç–∏–≤–Ω–∞, –∂–¥–µ–º...', 'debug');
      if (!navigationStuckTimer) {
          navigationStuckTimer = setTimeout(async () => {
              log('‚ö†Ô∏è mainLoop: –ù–∞–≤–∏–≥–∞—Ü–∏—è –∑–∞–≤–∏—Å–ª–∞ –±–æ–ª–µ–µ 15 —Å–µ–∫—É–Ω–¥. –ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–∞—è –ø–µ—Ä–µ–∑–∞–≥—Ä—É–∑–∫–∞.', 'warn');
              await hardReload();
              navigationStuckTimer = null;
          }, 15000);
      }
      await sleep(500);
      continue;
    } else {
        if (navigationStuckTimer) {
            clearTimeout(navigationStuckTimer);
            navigationStuckTimer = null;
        }
    }

    // 2) –í—ã–ø–æ–ª–Ω–∏—Ç—å –∫–ª–∏–µ–Ω—Ç—Å–∫–∏–π —Å–∫—Ä–∏–ø—Ç –≤ –∫–æ–Ω—Ç–µ–∫—Å—Ç–µ –æ—Å–Ω–æ–≤–Ω–æ–π —Å—Ç—Ä–∞–Ω–∏—Ü—ã
    let updatedClientData;
    try {
        updatedClientData = await page.evaluate(async (cfg, initialStats) => {
            const LABELS={
              autoAC:'auto collector',
              autoSM:'shard multiplier',
              autoCB:'conveyor booster',
              autoFarm:'farm reward',
              autoRefine:'start refining'
            };
            let _lastClick = window._ab_lastClick || {};
            let _stats = window._ab_stats || initialStats;
            let _backoffUntil = window._ab_backoffUntil || 0;
            let _nextLogValue = window._ab_nextLogValue || Date.now();

            const rnd = (min,max)=> min + Math.random()*(max-min)|0;

            // –£–º–Ω—ã–π clientLog: –ª–æ–≥–∏—Ä—É–µ—Ç warn/error –≤—Å–µ–≥–¥–∞, info/debug –ø–æ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏—é
            const clientLog = (msg, level='info') => {
              const now = Date.now();
              if (level === 'error' || level === 'warn') {
                if (window.logFromClient) {
                  window.logFromClient(msg, level);
                }
              } else if (cfg.logEach > 0 && now >= _nextLogValue) {
                if (window.logFromClient) {
                  window.logFromClient(msg, level);
                }
                _nextLogValue = now + cfg.logEach * 1000;
              }
            };

            async function clientDoClick(el) {
              if (!el) { clientLog('[Client] –ü–æ–ø—ã—Ç–∫–∞ –∫–ª–∏–∫–∞ –ø–æ –Ω–µ—Å—É—â–µ—Å—Ç–≤—É—é—â–µ–º—É —ç–ª–µ–º–µ–Ω—Ç—É.', 'warn'); return; }
              const rect = el.getBoundingClientRect();
              if (!rect.width || !rect.height) { clientLog('[Client] –ü–æ–ø—ã—Ç–∫–∞ –∫–ª–∏–∫–∞ –ø–æ –Ω–µ–≤–∏–¥–∏–º–æ–º—É —ç–ª–µ–º–µ–Ω—Ç—É (–Ω—É–ª–µ–≤–∞—è —à–∏—Ä–∏–Ω–∞/–≤—ã—Å–æ—Ç–∞).', 'warn'); return; }
              const x = rect.left + Math.random() * rect.width;
              const y = rect.top + Math.random() * rect.height;
              if (window.doPuppeteerClick) { // –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ exposed —Ñ—É–Ω–∫—Ü–∏–∏
                await window.doPuppeteerClick(x, y);
              } else {
                clientLog(`[Client WARN] doPuppeteerClick –Ω–µ –¥–æ—Å—Ç—É–ø–µ–Ω. –ü–æ–ø—ã—Ç–∫–∞ –Ω–∞—Ç–∏–≤–Ω–æ–≥–æ –∫–ª–∏–∫–∞.`, 'warn');
                el.click();
              }
            }

            // findBtn: –ù–∞—Ö–æ–¥–∏—Ç —Ç–µ–∫—Å—Ç–æ–≤—ã–π —ç–ª–µ–º–µ–Ω—Ç, –∑–∞—Ç–µ–º –∏—â–µ—Ç –±–ª–∏–∂–∞–π—à—É—é –∫–Ω–æ–ø–∫—É.
            function findBtn(text){
              const normalizedSearchText = text.toLowerCase().trim();
              const potentialTextElements = [...document.querySelectorAll('h3, div, span, p')].filter(el => {
                  return el.innerText && el.innerText.toLowerCase().includes(normalizedSearchText);
              });

              // clientLog(`[Client Debug] Searching for "${text}". Found ${potentialTextElements.length} potential text elements.`, 'debug');

              for (const el of potentialTextElements) {
                  const elText = el.innerText?.toLowerCase().trim();
                  if (elText === normalizedSearchText || elText.startsWith(normalizedSearchText + ' ') || elText.startsWith(normalizedSearchText + '\n')) {
                      const button = el.closest('button');
                      if (button) {
                          // clientLog(`[Client Debug] –ù–∞–π–¥–µ–Ω —Ç–µ–∫—Å—Ç–æ–≤—ã–π —ç–ª–µ–º–µ–Ω—Ç "${el.innerText.trim()}" –∏ –±–ª–∏–∂–∞–π—à–∞—è –∫–Ω–æ–ø–∫–∞ –¥–ª—è "${text}".`, 'debug');
                          return button;
                      } else {
                          // –ó–∞–∫–æ–º–º–µ–Ω—Ç–∏—Ä—É–π—Ç–µ —ç—Ç—É —Å—Ç—Ä–æ–∫—É, —Ç–∞–∫ –∫–∞–∫ –æ–Ω–∞ –≤—ã–∑—ã–≤–∞–µ—Ç —Ñ–ª—É–¥
                          // clientLog(`[Client Warn] –ù–∞–π–¥–µ–Ω —Ç–µ–∫—Å—Ç–æ–≤—ã–π —ç–ª–µ–º–µ–Ω—Ç "${el.innerText.trim()}" –¥–ª—è "${text}", –Ω–æ –±–µ–∑ –±–ª–∏–∂–∞–π—à–µ–π –∫–Ω–æ–ø–∫–∏.`, 'warn');
                      }
                  }
              }
              // clientLog(`[Client Debug] –ù–µ –Ω–∞–π–¥–µ–Ω —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â–∏–π —Ç–µ–∫—Å—Ç–æ–≤—ã–π —ç–ª–µ–º–µ–Ω—Ç –¥–ª—è "${text}".`, 'debug');
              return null;
            }


            function getCooldown(btn){
              if(!btn || btn.disabled===false) return 0;
              if(/activating/i.test(btn.innerText)) return 3000;
              const m = /(\d+)\s*m.*?(\d+)\s*s/i.exec(btn.innerText);if(m)return(+m[1]*60+ +m[2])*1e3;
              const s = /(\d+)\s*s/i.exec(btn.innerText);return s? +s[1]*1e3:600000;
            }

            // --- –ü–µ—Ä–µ—Ö–≤–∞—Ç fetch –¥–ª—è 429 / 403 ---
            if (!window.__ab_fetch_patched) {
                const nativeFetch = window.fetch.bind(window);
                window.fetch = async (...args) => {
                    try {
                        const res = await nativeFetch(...args);
                        if (res.status === 429) {
                            _backoffUntil = Date.now() + 5 * 60 * 1000;
                            clientLog('[Client] –û–±–Ω–∞—Ä—É–∂–µ–Ω 429 (Too Many Requests) ‚Üí —Å—Ç–∞–≤–∏–º –ø–∞—É–∑—É 5 –º–∏–Ω.', 'warn');
                        }
                        if (res.status === 403) {
                            clientLog('[Client] –û–±–Ω–∞—Ä—É–∂–µ–Ω 403 (Forbidden) ‚Üí —Ç—Ä–µ–±—É–µ—Ç—Å—è –ø–µ—Ä–µ–∑–∞–≥—Ä—É–∑–∫–∞.', 'warn');
                            return Promise.reject(new Error('403 Forbidden detected.'));
                        }
                        return res;
                    } catch (error) {
                        clientLog('[Client] –û—à–∏–±–∫–∞ –ø—Ä–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–∏ fetch –∑–∞–ø—Ä–æ—Å–∞: ' + error.message, 'error');
                        throw error;
                    }
                };
                window.__ab_fetch_patched = true;
            }

            // --- –û—Å–Ω–æ–≤–Ω–∞—è –ª–æ–≥–∏–∫–∞ –∫–ª–∏–∫–æ–≤ –∏ –ø—Ä–æ–≤–µ—Ä–∫–∏ –∫–Ω–æ–ø–æ–∫ ---
            const now = Date.now();
            if (now < _backoffUntil) {
                clientLog(`[Client] –í —Ä–µ–∂–∏–º–µ –ø–∞—É–∑—ã –¥–æ ${new Date(_backoffUntil).toLocaleTimeString()}.`);
                return {
                    updatedStats: _stats,
                    updatedLastClick: _lastClick,
                    updatedBackoffUntil: _backoffUntil,
                    updatedNextLogValue: _nextLogValue,
                    action: 'waiting_backoff',
                    waitDuration: _backoffUntil - now // –ü–µ—Ä–µ–¥–∞–µ–º –æ—Å—Ç–∞–≤—à–µ–µ—Å—è –≤—Ä–µ–º—è –ø–∞—É–∑—ã
                };
            }

            let actionTaken = false;
            let minWaitDuration = Infinity; // –û—Ç—Å–ª–µ–∂–∏–≤–∞–µ–º –º–∏–Ω–∏–º–∞–ª—å–Ω—ã–π –∫—É–ª–¥–∞—É–Ω/–∑–∞–¥–µ—Ä–∂–∫—É

            for (const key of Object.keys(LABELS)) {
                if (!cfg[key]) continue;

                if (key === 'autoFarm') {
                    const eightHoursMs = 8 * 60 * 60 * 1000;
                    const nextFarmTime = (_lastClick[key] || 0) + eightHoursMs;

                    if (now < nextFarmTime) {
                        const remaining = nextFarmTime - now;
                        clientLog(`‚è≥ ${LABELS[key]}: —Å–ª–µ–¥—É—é—â–∏–π —Å–±–æ—Ä —á–µ—Ä–µ–∑ ${Math.round(remaining / 1000 / 60)} –º–∏–Ω.`);
                        minWaitDuration = Math.min(minWaitDuration, remaining); // –û–±–Ω–æ–≤–ª—è–µ–º minWaitDuration
                        continue;
                    }
                }

                const btn = findBtn(LABELS[key]);
                if (!btn) {
                    continue; // –ö–Ω–æ–ø–∫–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞, –ø–µ—Ä–µ—Ö–æ–¥–∏–º –∫ —Å–ª–µ–¥—É—é—â–µ–π
                }

                const cooldown = getCooldown(btn);
                // clientLog(`[Client Debug] –ö–Ω–æ–ø–∫–∞ "${LABELS[key]}": –Ω–∞–π–¥–µ–Ω–∞, disabled: ${btn.disabled}, –∫—É–ª–¥–∞—É–Ω: ${cooldown / 1000}s.`, 'debug');

                // –õ–æ–≥–∏–∫–∞ –¥–ª—è autoRefine
                if (key === 'autoRefine') {
                    let currentPoints = 0;
                    let requiredPoints = 0;

                    const yourShardsLabel = [...document.querySelectorAll('span.font-bold')].find(el => el.innerText.includes('Your Shards'));
                    const requiredShardsLabel = [...document.querySelectorAll('span.font-bold')].find(el => el.innerText.includes('Required Shards'));

                    if (yourShardsLabel && yourShardsLabel.nextElementSibling) {
                        currentPoints = parseInt(yourShardsLabel.nextElementSibling.innerText.replace(/[^0-9]/g, '')) || 0;
                        clientLog(`[Client Debug] Refinery: Current Shards: ${currentPoints}`, 'debug');
                    }
                    if (requiredShardsLabel && requiredShardsLabel.nextElementSibling) {
                        requiredPoints = parseInt(requiredShardsLabel.nextElementSibling.innerText.replace(/[^0-9]/g, '')) || 0;
                        clientLog(`[Client Debug] Refinery: Required Shards: ${requiredPoints}`, 'debug');
                    }

                    if (btn.disabled && currentPoints < requiredPoints) {
                        clientLog(`Refinery: –ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ —à–∞—Ä–¥–æ–≤. –ù—É–∂–Ω–æ ${requiredPoints}, —É –≤–∞—Å ${currentPoints}.`, 'info');
                        minWaitDuration = Math.min(minWaitDuration, 5000); // –ù–∞–ø—Ä–∏–º–µ—Ä, 5 —Å–µ–∫—É–Ω–¥
                        continue;
                    }
                    if (currentPoints >= requiredPoints && !btn.disabled) {
                        const since = now - (_lastClick[key] || 0);
                        const gap = 5000 + rnd(0, 2000);
                        if (since > gap) {
                            clientLog(`Refinery: –ö–Ω–æ–ø–∫–∞ –∞–∫—Ç–∏–≤–Ω–∞, —à–∞—Ä–¥–æ–≤ –¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ. –ü–æ–ø—ã—Ç–∫–∞ –∫–ª–∏–∫–∞.`, 'info');
                            await clientDoClick(btn);
                            _lastClick[key] = now;
                            _stats.clickCount[key]++;
                            clientLog(`‚ö° ${key} –∫–ª–∏–∫–Ω—É—Ç. –®–∞—Ä–¥–æ–≤: ${currentPoints}, –¢—Ä–µ–±—É–µ—Ç—Å—è: ${requiredPoints}.`, 'info');
                            actionTaken = true;
                            return { // –í–æ–∑–≤—Ä–∞—â–∞–µ–º—Å—è —Å—Ä–∞–∑—É –ø–æ—Å–ª–µ —É—Å–ø–µ—à–Ω–æ–≥–æ –∫–ª–∏–∫–∞
                                updatedStats: _stats, updatedLastClick: _lastClick,
                                updatedBackoffUntil: _backoffUntil, updatedNextLogValue: _nextLogValue,
                                action: 'clicked'
                            };
                        } else {
                            clientLog(`Refinery: –ö–Ω–æ–ø–∫–∞ –∞–∫—Ç–∏–≤–Ω–∞, —à–∞—Ä–¥–æ–≤ –¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ, –Ω–æ —Å–ª–∏—à–∫–æ–º —Ä–∞–Ω–æ (–æ—Å—Ç–∞–ª–æ—Å—å ${((gap - since) / 1000).toFixed(1)}s).`, 'info');
                            minWaitDuration = Math.min(minWaitDuration, gap - since);
                        }
                    } else {
                        clientLog(`Refinery: –ö–Ω–æ–ø–∫–∞ "${LABELS[key]}" –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–∞ –∏–ª–∏ –æ–∂–∏–¥–∞–µ—Ç. –®–∞—Ä–¥–æ–≤: ${currentPoints}, –¢—Ä–µ–±—É–µ—Ç—Å—è: ${requiredPoints}.`, 'info');
                        minWaitDuration = Math.min(minWaitDuration, cooldown > 0 ? cooldown : 5000); // –ò—Å–ø–æ–ª—å–∑—É–µ–º cooldown –∏–ª–∏ 5 —Å–µ–∫ –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é
                        continue;
                    }
                }

                // –û–±—â–∞—è –ª–æ–≥–∏–∫–∞ –¥–ª—è –¥—Ä—É–≥–∏—Ö –∫–Ω–æ–ø–æ–∫ (autoAC, autoSM, autoCB)
                if (btn.disabled && cooldown > 0) {
                    clientLog(`[Client] –ö–Ω–æ–ø–∫–∞ "${LABELS[key]}" –Ω–∞ –∫—É–ª–¥–∞—É–Ω–µ –∏–ª–∏ –æ—Ç–∫–ª—é—á–µ–Ω–∞.`, 'info');
                    minWaitDuration = Math.min(minWaitDuration, cooldown);
                    continue; // –ö–Ω–æ–ø–∫–∞ –Ω–µ–∞–∫—Ç–∏–≤–Ω–∞, –ø–µ—Ä–µ—Ö–æ–¥–∏–º –∫ —Å–ª–µ–¥—É—é—â–µ–π
                }

                // –ï—Å–ª–∏ –∫–Ω–æ–ø–∫–∞ –∞–∫—Ç–∏–≤–Ω–∞ –∏ –Ω–µ disabled, –ø—Ä–æ–≤–µ—Ä—è–µ–º –∑–∞–¥–µ—Ä–∂–∫—É
                if (!btn.disabled) {
                    const since = now - (_lastClick[key] || 0);
                    const gap = 8000 + rnd(0, 2000); // 8-10 —Å–µ–∫—É–Ω–¥ –∑–∞–¥–µ—Ä–∂–∫–∞ –º–µ–∂–¥—É –∫–ª–∏–∫–∞–º–∏ –¥–ª—è –±—É—Å—Ç–µ—Ä–æ–≤

                    if (since > gap) {
                        clientLog(`[Client] –ö–Ω–æ–ø–∫–∞ "${LABELS[key]}" –∞–∫—Ç–∏–≤–Ω–∞ –∏ –ø—Ä–æ—à–ª–æ –¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –≤—Ä–µ–º–µ–Ω–∏. –ü–æ–ø—ã—Ç–∫–∞ –∫–ª–∏–∫–∞.`, 'info');
                        await clientDoClick(btn);
                        _lastClick[key] = now;
                        _stats.clickCount[key]++;
                        clientLog(`‚ö° ${LABELS[key]} –∫–ª–∏–∫–Ω—É—Ç.`, 'info');
                        actionTaken = true;
                        return { // –í–æ–∑–≤—Ä–∞—â–∞–µ–º—Å—è —Å—Ä–∞–∑—É –ø–æ—Å–ª–µ —É—Å–ø–µ—à–Ω–æ–≥–æ –∫–ª–∏–∫–∞
                            updatedStats: _stats, updatedLastClick: _lastClick,
                            updatedBackoffUntil: _backoffUntil, updatedNextLogValue: _nextLogValue,
                            action: 'clicked'
                        };
                    } else {
                        // –ö–Ω–æ–ø–∫–∞ –∞–∫—Ç–∏–≤–Ω–∞, –Ω–æ –µ—â–µ –Ω–µ –≤—Ä–µ–º—è –∫–ª–∏–∫–∞—Ç—å
                        const remaining = gap - since;
                        clientLog(`[Client] –ö–Ω–æ–ø–∫–∞ "${LABELS[key]}" –∞–∫—Ç–∏–≤–Ω–∞, –Ω–æ —Å–ª–∏—à–∫–æ–º —Ä–∞–Ω–æ (–æ—Å—Ç–∞–ª–æ—Å—å ${((remaining) / 1000).toFixed(1)}s).`, 'info');
                        minWaitDuration = Math.min(minWaitDuration, remaining);
                    }
                }
            }

            // --- Keep-Alive ---
            if(cfg.keepAlive && rnd(0,10)<2){ // 20% —à–∞–Ω—Å –∫–∞–∂–¥—ã–π —Ü–∏–∫–ª
              fetch('/favicon.ico',{cache:'no-store',mode:'no-cors'}).catch(()=>{}); // –§–æ–Ω–æ–≤—ã–π –∑–∞–ø—Ä–æ—Å
              const body = document.body;
              if (body) {
                const rect = body.getBoundingClientRect();
                const x = rect.left + Math.random()*rect.width;
                const y = rect.top  + Math.random()*rect.height;
                // –ò–º–∏—Ç–∞—Ü–∏—è –¥–≤–∏–∂–µ–Ω–∏—è –º—ã—à–∏
                body.dispatchEvent(new MouseEvent('mousemove', { bubbles:true, clientX:x, clientY:y }));
                // –ò–º–∏—Ç–∞—Ü–∏—è —Å–∫—Ä–æ–ª–ª–∞
                window.scrollBy(0, rnd(-1,1));
              }
              // –ò–º–∏—Ç–∞—Ü–∏—è —Ñ–æ–∫—É—Å–∞/–±–ª—é—Ä–∞
              document.dispatchEvent(new Event('focus', {bubbles:true}));
              document.dispatchEvent(new Event('blur', {bubbles:true}));
              clientLog('‚ÑπÔ∏è Keep-Alive –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—å –≤—ã–ø–æ–ª–Ω–µ–Ω–∞ (client-side).');
            }

            // –°–æ—Ö—Ä–∞–Ω—è–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏—è –≤ –≥–ª–æ–±–∞–ª—å–Ω—ã–π window
            window._ab_lastClick = _lastClick;
            window._ab_stats = _stats;
            window._ab_backoffUntil = _backoffUntil;
            window._ab_nextLogValue = _nextLogValue;

            // –ï—Å–ª–∏ –Ω–∏–∫–∞–∫–∏—Ö –∫–ª–∏–∫–æ–≤ –Ω–µ –±—ã–ª–æ, –≤–æ–∑–≤—Ä–∞—â–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –º–∏–Ω–∏–º–∞–ª—å–Ω–æ–π –∑–∞–¥–µ—Ä–∂–∫–µ
            return {
                updatedStats: _stats,
                updatedLastClick: _lastClick,
                updatedBackoffUntil: _backoffUntil,
                updatedNextLogValue: _nextLogValue,
                action: 'no_action',
                // –ï—Å–ª–∏ minWaitDuration –æ—Å—Ç–∞–ª—Å—è Infinity, –∑–Ω–∞—á–∏—Ç, –Ω–µ—Ç –∞–∫—Ç–∏–≤–Ω—ã—Ö –∫—É–ª–¥–∞—É–Ω–æ–≤,
                // –∂–¥–µ–º –¥–µ—Ñ–æ–ª—Ç–Ω–æ–µ –≤—Ä–µ–º—è (–Ω–∞–ø—Ä–∏–º–µ—Ä, 10-15 —Å–µ–∫—É–Ω–¥)
                waitDuration: minWaitDuration === Infinity ? 10000 + rnd(0, 5000) : minWaitDuration + rnd(500, 2000)
            };

        }, config, stats); // –ü–µ—Ä–µ–¥–∞–µ–º –∞–∫—Ç—É–∞–ª—å–Ω—ã–µ config –∏ stats –∏–∑ Node.js

        // –ü—Ä–∏–º–µ–Ω—è–µ–º –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –∏–∑ –∫–ª–∏–µ–Ω—Ç–∞ (result)
        stats = updatedClientData.updatedStats;
        clientBackoffUntil = updatedClientData.updatedBackoffUntil;
        consecutiveErrors = 0; // –°–±—Ä–∞—Å—ã–≤–∞–µ–º —Å—á–µ—Ç—á–∏–∫ –æ—à–∏–±–æ–∫ –ø—Ä–∏ —É—Å–ø–µ—à–Ω–æ–º –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–∏

        // –û–±—Ä–∞–±–æ—Ç–∫–∞ –¥–µ–π—Å—Ç–≤–∏—è, –≤—ã–ø–æ–ª–Ω–µ–Ω–Ω–æ–≥–æ –∫–ª–∏–µ–Ω—Ç–æ–º
        if (updatedClientData.action === 'clicked') {
            log('mainLoop: –ö–ª–∏–µ–Ω—Ç —Å–æ–æ–±—â–∏–ª –æ –∫–ª–∏–∫–µ, –∫–æ—Ä–æ—Ç–∫–∞—è –ø–∞—É–∑–∞.', 'debug');
            await sleep(rnd(2000, 5000)); // –ö–æ—Ä–æ—Ç–∫–∞—è –ø–∞—É–∑–∞ –ø–æ—Å–ª–µ –∫–ª–∏–∫–∞
        } else if (updatedClientData.action === 'no_action' || updatedClientData.action === 'waiting_backoff') {
            // –ü–∞—É–∑–∞, –æ—Å–Ω–æ–≤–∞–Ω–Ω–∞—è –Ω–∞ —Ä–∞—Å—Å—á–∏—Ç–∞–Ω–Ω–æ–π –∫–ª–∏–µ–Ω—Ç–æ–º –º–∏–Ω–∏–º–∞–ª—å–Ω–æ–π –∑–∞–¥–µ—Ä–∂–∫–µ
            const calculatedSleep = Math.max(1000, Math.min(updatedClientData.waitDuration, 60000)); // –ú–∞–∫—Å–∏–º—É–º 1 –º–∏–Ω—É—Ç–∞, –º–∏–Ω–∏–º—É–º 1 —Å–µ–∫—É–Ω–¥–∞
            log(`mainLoop: –ù–µ—Ç –¥–µ–π—Å—Ç–≤–∏–π, –ø–∞—É–∑–∞ –Ω–∞ ${Math.round(calculatedSleep / 1000)} —Å–µ–∫.`, 'debug');
            await sleep(calculatedSleep);
        } else {
            // –í —Å–ª—É—á–∞–µ, –µ—Å–ª–∏ –∫–ª–∏–µ–Ω—Ç –≤–µ—Ä–Ω—É–ª –Ω–µ–∏–∑–≤–µ—Å—Ç–Ω–æ–µ –¥–µ–π—Å—Ç–≤–∏–µ (–Ω–µ –¥–æ–ª–∂–Ω–æ –ø—Ä–æ–∏—Å—Ö–æ–¥–∏—Ç—å)
            log(`mainLoop: –ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ–µ –¥–µ–π—Å—Ç–≤–∏–µ –æ—Ç –∫–ª–∏–µ–Ω—Ç–∞: ${updatedClientData.action}, –ø–∞—É–∑–∞ 1 —Å–µ–∫.`, 'warn');
            await sleep(1000);
        }

    } catch (e) {
        log(`‚ùå mainLoop: –û—à–∏–±–∫–∞ –ø—Ä–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–∏ –∫–ª–∏–µ–Ω—Ç—Å–∫–æ–≥–æ —Å–∫—Ä–∏–ø—Ç–∞ (main page): ${e.message}`, 'error');
        consecutiveErrors++; // –£–≤–µ–ª–∏—á–∏–≤–∞–µ–º —Å—á–µ—Ç—á–∏–∫ –æ—à–∏–±–æ–∫

        if (e.message.includes('403 Forbidden detected') || e.message.includes('ERR_CONNECTION_REFUSED')) {
            log('‚ùå –û–±–Ω–∞—Ä—É–∂–µ–Ω 403 / –û—Ç–∫–∞–∑ —Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è. –í—ã–ø–æ–ª–Ω—è—é –∂–µ—Å—Ç–∫—É—é –ø–µ—Ä–µ–∑–∞–≥—Ä—É–∑–∫—É.', 'error');
            await hardReload();
            consecutiveErrors = 0; // –°–±—Ä–æ—Å –ø–æ—Å–ª–µ –∂–µ—Å—Ç–∫–æ–π –ø–µ—Ä–µ–∑–∞–≥—Ä—É–∑–∫–∏
        } else if (consecutiveErrors >= MAX_CONSECUTIVE_ERRORS) {
            log(`‚ùå –î–æ—Å—Ç–∏–≥–Ω—É—Ç–æ ${MAX_CONSECUTIVE_ERRORS} –ø–æ—Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª—å–Ω—ã—Ö –æ—à–∏–±–æ–∫. –í—ã–ø–æ–ª–Ω—è—é –∂–µ—Å—Ç–∫—É—é –ø–µ—Ä–µ–∑–∞–≥—Ä—É–∑–∫—É.`, 'error');
            await hardReload();
            consecutiveErrors = 0; // –°–±—Ä–∞—Å—ã–≤–∞–µ–º —Å—á–µ—Ç—á–∏–∫ –ø–æ—Å–ª–µ –ø–µ—Ä–µ–∑–∞–≥—Ä—É–∑–∫–∏
        } else {
            // –ï—Å–ª–∏ —ç—Ç–æ –¥—Ä—É–≥–∞—è –∫—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞, –ø—Ä–æ—Å—Ç–æ –∂–¥–µ–º –∏ –ø–æ–≤—Ç–æ—Ä—è–µ–º
            log('‚ùå –ù–µ –∫—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞. –ñ–¥–µ–º 5 —Å–µ–∫—É–Ω–¥ –∏ –ø–æ–≤—Ç–æ—Ä—è–µ–º.', 'warn');
            await sleep(5000); // –ö–æ—Ä–æ—Ç–∫–∞—è –ø–∞—É–∑–∞ –ø—Ä–∏ –æ—à–∏–±–∫–µ, —á—Ç–æ–±—ã –Ω–µ —Å–ø–∞–º–∏—Ç—å
        }
    }

    // 3) –ü—Ä–æ–≤–µ—Ä–∫–∞ XU –≤–Ω–µ iframe - —ç—Ç–∞ —á–∞—Å—Ç—å –æ—Å—Ç–∞–µ—Ç—Å—è –∫–∞–∫ –µ—Å—Ç—å
    try {
      const xu = await page.evaluate(()=>+document.querySelector('span.text-sm.font-medium.text-amber-400.drop-shadow-sm.tracking-wide')?.textContent.replace(/\s/g,'').replace(',','.')||0);
      if(xu!==lastXu){lastXu=xu;lastTS=Date.now();}
      if(Date.now()-lastTS>300000 && xu > 0){
        log('üõë XU —Å—Ç–∞—Ç–∏—á–µ–Ω 5 –º–∏–Ω ‚Äì reload','warn');
        await hardReload();
        lastTS=Date.Now();
      }
    } catch(e) {
      log(`‚ùå mainLoop: –û—à–∏–±–∫–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏ XU (–≤–Ω–µ iframe): ${e.message}`, 'error');
    }

    // 4) –ü–µ—Ä–∏–æ–¥–∏—á–µ—Å–∫–æ–µ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ cookies
    if (Date.now() - lastCookieSave > 5 * 60 * 1000) {
      try {
        const cookiesToSave = await page.browser().defaultBrowserContext().cookies();
        await save(config.cookiesFilePath, cookiesToSave);
        log(`üíæ Cookies —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã (${cookiesToSave.length})`, 'info');
        lastCookieSave = Date.now();
      } catch (e) {
        log(`‚ùå mainLoop: –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–µ—Ä–∏–æ–¥–∏—á–µ—Å–∫–æ–º —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–∏ –∫—É–∫–∏: ${e.message}`, 'error');
      }
    }

    // 5) –°–æ—Ö—Ä–∞–Ω—è–µ–º stats –Ω–∞ –¥–∏—Å–∫
    await save(config.statsFilePath, stats);

    // –£–¥–∞–ª–µ–Ω sleep(1000) –∑–¥–µ—Å—å, —Ç–∞–∫ –∫–∞–∫ –æ–Ω –∑–∞–º–µ–Ω–µ–Ω –¥–∏–Ω–∞–º–∏—á–µ—Å–∫–æ–π –ø–∞—É–∑–æ–π –≤—ã—à–µ
  }
}

/* ===== 10. –ó–∞–ø—É—Å–∫ –≤—Å–µ–≥–æ ========================== */
(async () => {
  process.on('unhandledRejection', (reason, promise) => {
      log(`üö® Unhandled Rejection at: ${promise}, reason: ${reason}`, 'error');
      if (browser) {
          browser.close().catch(e => log(`‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–∫—Ä—ã—Ç–∏–∏ –±—Ä–∞—É–∑–µ—Ä–∞ –∏–∑ unhandledRejection: ${e.message}`, 'error'));
      }
      process.exit(1);
  });

  log('‚ÑπÔ∏è –ó–∞–≥—Ä—É–∑–∫–∞ –∫–æ–Ω—Ñ–∏–≥–∞/—Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏...', 'info');
  config = {...DEF, ...(await load(DEF.configFilePath, {}))};
  stats  = {...stats, ...(await load(DEF.statsFilePath, {}))};

  log('‚ÑπÔ∏è –ó–∞–ø—É—Å–∫ –±—Ä–∞—É–∑–µ—Ä–∞...', 'info');
  try {
    await launch();
    listeners();

    log('‚ÑπÔ∏è –ü–µ—Ä–µ—Ö–æ–¥–∏–º –Ω–∞ geturanium.io...', 'info');
    navigating = true;
    await page.goto('https://geturanium.io', { waitUntil:'networkidle2', timeout:60000 });
    navigating = false;
    log(`‚ÑπÔ∏è URL: ${page.url()}`, 'info');

    if (page.url().includes('/auth')) {
      log('üîë –ù–∞ —Å—Ç—Ä–∞–Ω–∏—Ü–µ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏, –∂–¥—ë–º –≤—Ö–æ–¥–∞‚Ä¶', 'info');
      navigating = true;
      await page.waitForNavigation({ waitUntil:'networkidle2', timeout:180000 })
        .catch(e => log(`‚åõ –¢–∞–π–º-–∞—É—Ç –æ–∂–∏–¥–∞–Ω–∏—è –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏: ${e.message}`, 'warn'));
      navigating = false;
      log('‚úÖ –ê–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è –∑–∞–≤–µ—Ä—à–µ–Ω–∞', 'info');
      const cook = await page.browser().defaultBrowserContext().cookies();
      await save(config.cookiesFilePath, cook);
      lastCookieSave = Date.now();
    } else {
      log('‚ÑπÔ∏è –°–µ—Å—Å–∏—è –∞–∫—Ç–∏–≤–Ω–∞, —Å–æ—Ö—Ä–∞–Ω—è–µ–º —Ç–µ–∫—É—â–∏–µ –∫—É–∫–∏', 'info');
      const cook = await page.browser().defaultBrowserContext().cookies();
      await save(config.cookiesFilePath, cook);
      lastCookieSave = Date.now();
    }

    await sleep(3000);
    process.on('SIGINT', async () => {
      log('SIGINT, —Å–æ—Ö—Ä–∞–Ω—è–µ–º –∏ –≤—ã—Ö–æ–¥–∏–º...', 'info');
      const cook = await page.browser().defaultBrowserContext().cookies().catch(()=>[]);
      await save(config.cookiesFilePath, cook);
      await save(config.configFilePath, config);
      await save(config.statsFilePath, stats);
      if (browser) await browser.close();
      process.exit(0);
    });

    scheduleReload();
    await mainLoop();

  } catch (initialError) {
    log(`‚ùå –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞ –ø—Ä–∏ —Å—Ç–∞—Ä—Ç–µ: ${initialError.message}`, 'error');
    if (browser) {
      await browser.close().catch(e => log(`‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–∫—Ä—ã—Ç–∏–∏ –±—Ä–∞—É–∑–µ—Ä–∞ –ø–æ—Å–ª–µ –∫—Ä–∏—Ç–∏—á–µ—Å–∫–æ–π –æ—à–∏–±–∫–∏: ${e.message}`, 'error'));
    }
    process.exit(1);
  }
})();